'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace WcfService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OrderDto", [Namespace]:="http://schemas.datacontract.org/2004/07/OrderManagement.WcfService.Dto"),  _
     System.SerializableAttribute()>  _
    Partial Public Class OrderDto
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CustomerDtoField As WcfService.CustomerDto
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CustomerIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FreightField As System.Nullable(Of Decimal)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private InvoiceNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderDateField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderDetailDtoesField() As WcfService.OrderDetailDto
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderTypeField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ShipDateField As System.Nullable(Of Date)
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerDto() As WcfService.CustomerDto
            Get
                Return Me.CustomerDtoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CustomerDtoField, value) <> true) Then
                    Me.CustomerDtoField = value
                    Me.RaisePropertyChanged("CustomerDto")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerId() As Integer
            Get
                Return Me.CustomerIdField
            End Get
            Set
                If (Me.CustomerIdField.Equals(value) <> true) Then
                    Me.CustomerIdField = value
                    Me.RaisePropertyChanged("CustomerId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Freight() As System.Nullable(Of Decimal)
            Get
                Return Me.FreightField
            End Get
            Set
                If (Me.FreightField.Equals(value) <> true) Then
                    Me.FreightField = value
                    Me.RaisePropertyChanged("Freight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property InvoiceNo() As String
            Get
                Return Me.InvoiceNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.InvoiceNoField, value) <> true) Then
                    Me.InvoiceNoField = value
                    Me.RaisePropertyChanged("InvoiceNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderDate() As System.Nullable(Of Date)
            Get
                Return Me.OrderDateField
            End Get
            Set
                If (Me.OrderDateField.Equals(value) <> true) Then
                    Me.OrderDateField = value
                    Me.RaisePropertyChanged("OrderDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderDetailDtoes() As WcfService.OrderDetailDto()
            Get
                Return Me.OrderDetailDtoesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OrderDetailDtoesField, value) <> true) Then
                    Me.OrderDetailDtoesField = value
                    Me.RaisePropertyChanged("OrderDetailDtoes")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderId() As Integer
            Get
                Return Me.OrderIdField
            End Get
            Set
                If (Me.OrderIdField.Equals(value) <> true) Then
                    Me.OrderIdField = value
                    Me.RaisePropertyChanged("OrderId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderType() As Integer
            Get
                Return Me.OrderTypeField
            End Get
            Set
                If (Me.OrderTypeField.Equals(value) <> true) Then
                    Me.OrderTypeField = value
                    Me.RaisePropertyChanged("OrderType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ShipDate() As System.Nullable(Of Date)
            Get
                Return Me.ShipDateField
            End Get
            Set
                If (Me.ShipDateField.Equals(value) <> true) Then
                    Me.ShipDateField = value
                    Me.RaisePropertyChanged("ShipDate")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CustomerDto", [Namespace]:="http://schemas.datacontract.org/2004/07/OrderManagement.WcfService.Dto"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CustomerDto
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CustomerIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PhoneField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PostCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TaobaoNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WechatNameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Address() As String
            Get
                Return Me.AddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressField, value) <> true) Then
                    Me.AddressField = value
                    Me.RaisePropertyChanged("Address")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerId() As Integer
            Get
                Return Me.CustomerIdField
            End Get
            Set
                If (Me.CustomerIdField.Equals(value) <> true) Then
                    Me.CustomerIdField = value
                    Me.RaisePropertyChanged("CustomerId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Phone() As String
            Get
                Return Me.PhoneField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PhoneField, value) <> true) Then
                    Me.PhoneField = value
                    Me.RaisePropertyChanged("Phone")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PostCode() As String
            Get
                Return Me.PostCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PostCodeField, value) <> true) Then
                    Me.PostCodeField = value
                    Me.RaisePropertyChanged("PostCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TaobaoName() As String
            Get
                Return Me.TaobaoNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TaobaoNameField, value) <> true) Then
                    Me.TaobaoNameField = value
                    Me.RaisePropertyChanged("TaobaoName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WechatName() As String
            Get
                Return Me.WechatNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.WechatNameField, value) <> true) Then
                    Me.WechatNameField = value
                    Me.RaisePropertyChanged("WechatName")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OrderDetailDto", [Namespace]:="http://schemas.datacontract.org/2004/07/OrderManagement.WcfService.Dto"),  _
     System.SerializableAttribute()>  _
    Partial Public Class OrderDetailDto
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LinkField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderDetailIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProductDtoField As WcfService.ProductDto
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProductIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PurchasePriceField As System.Nullable(Of Decimal)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QuantityField As System.Nullable(Of Integer)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SoldPriceField As System.Nullable(Of Decimal)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Link() As String
            Get
                Return Me.LinkField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LinkField, value) <> true) Then
                    Me.LinkField = value
                    Me.RaisePropertyChanged("Link")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderDetailId() As Integer
            Get
                Return Me.OrderDetailIdField
            End Get
            Set
                If (Me.OrderDetailIdField.Equals(value) <> true) Then
                    Me.OrderDetailIdField = value
                    Me.RaisePropertyChanged("OrderDetailId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderId() As Integer
            Get
                Return Me.OrderIdField
            End Get
            Set
                If (Me.OrderIdField.Equals(value) <> true) Then
                    Me.OrderIdField = value
                    Me.RaisePropertyChanged("OrderId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductDto() As WcfService.ProductDto
            Get
                Return Me.ProductDtoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductDtoField, value) <> true) Then
                    Me.ProductDtoField = value
                    Me.RaisePropertyChanged("ProductDto")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductId() As Integer
            Get
                Return Me.ProductIdField
            End Get
            Set
                If (Me.ProductIdField.Equals(value) <> true) Then
                    Me.ProductIdField = value
                    Me.RaisePropertyChanged("ProductId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PurchasePrice() As System.Nullable(Of Decimal)
            Get
                Return Me.PurchasePriceField
            End Get
            Set
                If (Me.PurchasePriceField.Equals(value) <> true) Then
                    Me.PurchasePriceField = value
                    Me.RaisePropertyChanged("PurchasePrice")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Quantity() As System.Nullable(Of Integer)
            Get
                Return Me.QuantityField
            End Get
            Set
                If (Me.QuantityField.Equals(value) <> true) Then
                    Me.QuantityField = value
                    Me.RaisePropertyChanged("Quantity")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SoldPrice() As System.Nullable(Of Decimal)
            Get
                Return Me.SoldPriceField
            End Get
            Set
                If (Me.SoldPriceField.Equals(value) <> true) Then
                    Me.SoldPriceField = value
                    Me.RaisePropertyChanged("SoldPrice")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Integer
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ProductDto", [Namespace]:="http://schemas.datacontract.org/2004/07/OrderManagement.WcfService.Dto"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ProductDto
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BrandIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProductIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProductNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProductNameJpField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SpeciesIdField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BrandId() As Integer
            Get
                Return Me.BrandIdField
            End Get
            Set
                If (Me.BrandIdField.Equals(value) <> true) Then
                    Me.BrandIdField = value
                    Me.RaisePropertyChanged("BrandId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductId() As Integer
            Get
                Return Me.ProductIdField
            End Get
            Set
                If (Me.ProductIdField.Equals(value) <> true) Then
                    Me.ProductIdField = value
                    Me.RaisePropertyChanged("ProductId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductName() As String
            Get
                Return Me.ProductNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductNameField, value) <> true) Then
                    Me.ProductNameField = value
                    Me.RaisePropertyChanged("ProductName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductNameJp() As String
            Get
                Return Me.ProductNameJpField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductNameJpField, value) <> true) Then
                    Me.ProductNameJpField = value
                    Me.RaisePropertyChanged("ProductNameJp")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SpeciesId() As Integer
            Get
                Return Me.SpeciesIdField
            End Get
            Set
                If (Me.SpeciesIdField.Equals(value) <> true) Then
                    Me.SpeciesIdField = value
                    Me.RaisePropertyChanged("SpeciesId")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OrderSearchConditionsDto", [Namespace]:="http://schemas.datacontract.org/2004/07/OrderManagement.WcfService.Dto"),  _
     System.SerializableAttribute()>  _
    Partial Public Class OrderSearchConditionsDto
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CustomerIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderDateFromField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderDateToField As System.Nullable(Of Date)
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerId() As Integer
            Get
                Return Me.CustomerIdField
            End Get
            Set
                If (Me.CustomerIdField.Equals(value) <> true) Then
                    Me.CustomerIdField = value
                    Me.RaisePropertyChanged("CustomerId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderDateFrom() As System.Nullable(Of Date)
            Get
                Return Me.OrderDateFromField
            End Get
            Set
                If (Me.OrderDateFromField.Equals(value) <> true) Then
                    Me.OrderDateFromField = value
                    Me.RaisePropertyChanged("OrderDateFrom")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderDateTo() As System.Nullable(Of Date)
            Get
                Return Me.OrderDateToField
            End Get
            Set
                If (Me.OrderDateToField.Equals(value) <> true) Then
                    Me.OrderDateToField = value
                    Me.RaisePropertyChanged("OrderDateTo")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SpeciesDto", [Namespace]:="http://schemas.datacontract.org/2004/07/OrderManagement.WcfService.Dto"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SpeciesDto
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SpeciesIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SpeciesNameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SpeciesId() As Integer
            Get
                Return Me.SpeciesIdField
            End Get
            Set
                If (Me.SpeciesIdField.Equals(value) <> true) Then
                    Me.SpeciesIdField = value
                    Me.RaisePropertyChanged("SpeciesId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SpeciesName() As String
            Get
                Return Me.SpeciesNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SpeciesNameField, value) <> true) Then
                    Me.SpeciesNameField = value
                    Me.RaisePropertyChanged("SpeciesName")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="BrandDto", [Namespace]:="http://schemas.datacontract.org/2004/07/OrderManagement.WcfService.Dto"),  _
     System.SerializableAttribute()>  _
    Partial Public Class BrandDto
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BrandIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BrandNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BrandNameJpField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BrandId() As Integer
            Get
                Return Me.BrandIdField
            End Get
            Set
                If (Me.BrandIdField.Equals(value) <> true) Then
                    Me.BrandIdField = value
                    Me.RaisePropertyChanged("BrandId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BrandName() As String
            Get
                Return Me.BrandNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.BrandNameField, value) <> true) Then
                    Me.BrandNameField = value
                    Me.RaisePropertyChanged("BrandName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BrandNameJp() As String
            Get
                Return Me.BrandNameJpField
            End Get
            Set
                If (Object.ReferenceEquals(Me.BrandNameJpField, value) <> true) Then
                    Me.BrandNameJpField = value
                    Me.RaisePropertyChanged("BrandNameJp")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="WcfService.IOrderManagementService")>  _
    Public Interface IOrderManagementService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetOrderDtoResponse")>  _
        Function GetOrderDto(ByVal orderId As Integer) As WcfService.OrderDto
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetOrderDtoResponse")>  _
        Function GetOrderDtoAsync(ByVal orderId As Integer) As System.Threading.Tasks.Task(Of WcfService.OrderDto)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetOrderDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetOrderDtoesResponse")>  _
        Function GetOrderDtoes() As WcfService.OrderDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetOrderDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetOrderDtoesResponse")>  _
        Function GetOrderDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.OrderDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetOrderDtoesByConditions", ReplyAction:="http://tempuri.org/IOrderManagementService/GetOrderDtoesByConditionsResponse")>  _
        Function GetOrderDtoesByConditions(ByVal conditions As WcfService.OrderSearchConditionsDto) As WcfService.OrderDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetOrderDtoesByConditions", ReplyAction:="http://tempuri.org/IOrderManagementService/GetOrderDtoesByConditionsResponse")>  _
        Function GetOrderDtoesByConditionsAsync(ByVal conditions As WcfService.OrderSearchConditionsDto) As System.Threading.Tasks.Task(Of WcfService.OrderDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddOrderDtoResponse")>  _
        Function AddOrderDto(ByVal orderDto As WcfService.OrderDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddOrderDtoResponse")>  _
        Function AddOrderDtoAsync(ByVal orderDto As WcfService.OrderDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateOrderDtoResponse")>  _
        Function UpdateOrderDto(ByVal orderDto As WcfService.OrderDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateOrderDtoResponse")>  _
        Function UpdateOrderDtoAsync(ByVal orderDto As WcfService.OrderDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddOrUpdateOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddOrUpdateOrderDtoResponse")>  _
        Function AddOrUpdateOrderDto(ByVal orderDto As WcfService.OrderDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddOrUpdateOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddOrUpdateOrderDtoResponse")>  _
        Function AddOrUpdateOrderDtoAsync(ByVal orderDto As WcfService.OrderDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteOrderDtoResponse")>  _
        Function DeleteOrderDto(ByVal orderId As Integer) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteOrderDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteOrderDtoResponse")>  _
        Function DeleteOrderDtoAsync(ByVal orderId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/OrderDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/OrderDtoExistsResponse")>  _
        Function OrderDtoExists(ByVal orderId As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/OrderDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/OrderDtoExistsResponse")>  _
        Function OrderDtoExistsAsync(ByVal orderId As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetCustomerDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetCustomerDtoesResponse")>  _
        Function GetCustomerDtoes() As WcfService.CustomerDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetCustomerDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetCustomerDtoesResponse")>  _
        Function GetCustomerDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.CustomerDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetCustomerDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetCustomerDtoResponse")>  _
        Function GetCustomerDto(ByVal customerId As Integer) As WcfService.CustomerDto
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetCustomerDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetCustomerDtoResponse")>  _
        Function GetCustomerDtoAsync(ByVal customerId As Integer) As System.Threading.Tasks.Task(Of WcfService.CustomerDto)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetCustomerDtoByCondition", ReplyAction:="http://tempuri.org/IOrderManagementService/GetCustomerDtoByConditionResponse")>  _
        Function GetCustomerDtoByCondition(ByVal condition As WcfService.CustomerDto) As WcfService.CustomerDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetCustomerDtoByCondition", ReplyAction:="http://tempuri.org/IOrderManagementService/GetCustomerDtoByConditionResponse")>  _
        Function GetCustomerDtoByConditionAsync(ByVal condition As WcfService.CustomerDto) As System.Threading.Tasks.Task(Of WcfService.CustomerDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddCustomerDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddCustomerDtoResponse")>  _
        Function AddCustomerDto(ByVal customerDto As WcfService.CustomerDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddCustomerDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddCustomerDtoResponse")>  _
        Function AddCustomerDtoAsync(ByVal customerDto As WcfService.CustomerDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateCustomerDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateCustomerDtoResponse")>  _
        Function UpdateCustomerDto(ByVal customerDto As WcfService.CustomerDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateCustomerDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateCustomerDtoResponse")>  _
        Function UpdateCustomerDtoAsync(ByVal customerDto As WcfService.CustomerDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteCustomerDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteCustomerDtoResponse")>  _
        Function DeleteCustomerDto(ByVal customerId As Integer) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteCustomerDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteCustomerDtoResponse")>  _
        Function DeleteCustomerDtoAsync(ByVal customerId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/CustomerDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/CustomerDtoExistsResponse")>  _
        Function CustomerDtoExists(ByVal customerId As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/CustomerDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/CustomerDtoExistsResponse")>  _
        Function CustomerDtoExistsAsync(ByVal customerId As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetProductDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetProductDtoesResponse")>  _
        Function GetProductDtoes() As WcfService.ProductDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetProductDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetProductDtoesResponse")>  _
        Function GetProductDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.ProductDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetProductDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetProductDtoResponse")>  _
        Function GetProductDto(ByVal productId As Integer) As WcfService.ProductDto
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetProductDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetProductDtoResponse")>  _
        Function GetProductDtoAsync(ByVal productId As Integer) As System.Threading.Tasks.Task(Of WcfService.ProductDto)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetProductDtoByCondition", ReplyAction:="http://tempuri.org/IOrderManagementService/GetProductDtoByConditionResponse")>  _
        Function GetProductDtoByCondition(ByVal condition As WcfService.ProductDto) As WcfService.ProductDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetProductDtoByCondition", ReplyAction:="http://tempuri.org/IOrderManagementService/GetProductDtoByConditionResponse")>  _
        Function GetProductDtoByConditionAsync(ByVal condition As WcfService.ProductDto) As System.Threading.Tasks.Task(Of WcfService.ProductDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddProductDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddProductDtoResponse")>  _
        Function AddProductDto(ByVal productDto As WcfService.ProductDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddProductDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddProductDtoResponse")>  _
        Function AddProductDtoAsync(ByVal productDto As WcfService.ProductDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateProductDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateProductDtoResponse")>  _
        Function UpdateProductDto(ByVal productDto As WcfService.ProductDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateProductDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateProductDtoResponse")>  _
        Function UpdateProductDtoAsync(ByVal productDto As WcfService.ProductDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteProductDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteProductDtoResponse")>  _
        Function DeleteProductDto(ByVal productId As Integer) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteProductDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteProductDtoResponse")>  _
        Function DeleteProductDtoAsync(ByVal productId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/ProductDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/ProductDtoExistsResponse")>  _
        Function ProductDtoExists(ByVal productId As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/ProductDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/ProductDtoExistsResponse")>  _
        Function ProductDtoExistsAsync(ByVal productId As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoesResponse")>  _
        Function GetSpeciesDtoes() As WcfService.SpeciesDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoesResponse")>  _
        Function GetSpeciesDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.SpeciesDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetSpeciesDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoResponse")>  _
        Function GetSpeciesDto(ByVal speciesId As Integer) As WcfService.SpeciesDto
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetSpeciesDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoResponse")>  _
        Function GetSpeciesDtoAsync(ByVal speciesId As Integer) As System.Threading.Tasks.Task(Of WcfService.SpeciesDto)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoByCondition", ReplyAction:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoByConditionResponse")>  _
        Function GetSpeciesDtoByCondition(ByVal condition As WcfService.SpeciesDto) As WcfService.SpeciesDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoByCondition", ReplyAction:="http://tempuri.org/IOrderManagementService/GetSpeciesDtoByConditionResponse")>  _
        Function GetSpeciesDtoByConditionAsync(ByVal condition As WcfService.SpeciesDto) As System.Threading.Tasks.Task(Of WcfService.SpeciesDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddSpeciesDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddSpeciesDtoResponse")>  _
        Function AddSpeciesDto(ByVal speciesDto As WcfService.SpeciesDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddSpeciesDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddSpeciesDtoResponse")>  _
        Function AddSpeciesDtoAsync(ByVal speciesDto As WcfService.SpeciesDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateSpeciesDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateSpeciesDtoResponse")>  _
        Function UpdateSpeciesDto(ByVal speciesDto As WcfService.SpeciesDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateSpeciesDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateSpeciesDtoResponse")>  _
        Function UpdateSpeciesDtoAsync(ByVal speciesDto As WcfService.SpeciesDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteSpeciesDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteSpeciesDtoResponse")>  _
        Function DeleteSpeciesDto(ByVal speciesId As Integer) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteSpeciesDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteSpeciesDtoResponse")>  _
        Function DeleteSpeciesDtoAsync(ByVal speciesId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/SpeciesDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/SpeciesDtoExistsResponse")>  _
        Function SpeciesDtoExists(ByVal speciesId As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/SpeciesDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/SpeciesDtoExistsResponse")>  _
        Function SpeciesDtoExistsAsync(ByVal speciesId As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetBrandDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetBrandDtoesResponse")>  _
        Function GetBrandDtoes() As WcfService.BrandDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetBrandDtoes", ReplyAction:="http://tempuri.org/IOrderManagementService/GetBrandDtoesResponse")>  _
        Function GetBrandDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.BrandDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetBrandDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetBrandDtoResponse")>  _
        Function GetBrandDto(ByVal brandId As Integer) As WcfService.BrandDto
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetBrandDto", ReplyAction:="http://tempuri.org/IOrderManagementService/GetBrandDtoResponse")>  _
        Function GetBrandDtoAsync(ByVal brandId As Integer) As System.Threading.Tasks.Task(Of WcfService.BrandDto)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetBrandDtoByCondition", ReplyAction:="http://tempuri.org/IOrderManagementService/GetBrandDtoByConditionResponse")>  _
        Function GetBrandDtoByCondition(ByVal condition As WcfService.BrandDto) As WcfService.BrandDto()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/GetBrandDtoByCondition", ReplyAction:="http://tempuri.org/IOrderManagementService/GetBrandDtoByConditionResponse")>  _
        Function GetBrandDtoByConditionAsync(ByVal condition As WcfService.BrandDto) As System.Threading.Tasks.Task(Of WcfService.BrandDto())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddBrandDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddBrandDtoResponse")>  _
        Function AddBrandDto(ByVal brandDto As WcfService.BrandDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/AddBrandDto", ReplyAction:="http://tempuri.org/IOrderManagementService/AddBrandDtoResponse")>  _
        Function AddBrandDtoAsync(ByVal brandDto As WcfService.BrandDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateBrandDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateBrandDtoResponse")>  _
        Function UpdateBrandDto(ByVal brandDto As WcfService.BrandDto) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/UpdateBrandDto", ReplyAction:="http://tempuri.org/IOrderManagementService/UpdateBrandDtoResponse")>  _
        Function UpdateBrandDtoAsync(ByVal brandDto As WcfService.BrandDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteBrandDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteBrandDtoResponse")>  _
        Function DeleteBrandDto(ByVal brandId As Integer) As OrderManagement.Common.ProcessResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/DeleteBrandDto", ReplyAction:="http://tempuri.org/IOrderManagementService/DeleteBrandDtoResponse")>  _
        Function DeleteBrandDtoAsync(ByVal brandId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/BrandDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/BrandDtoExistsResponse")>  _
        Function BrandDtoExists(ByVal brandId As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderManagementService/BrandDtoExists", ReplyAction:="http://tempuri.org/IOrderManagementService/BrandDtoExistsResponse")>  _
        Function BrandDtoExistsAsync(ByVal brandId As Integer) As System.Threading.Tasks.Task(Of Boolean)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IOrderManagementServiceChannel
        Inherits WcfService.IOrderManagementService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class OrderManagementServiceClient
        Inherits System.ServiceModel.ClientBase(Of WcfService.IOrderManagementService)
        Implements WcfService.IOrderManagementService
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function GetOrderDto(ByVal orderId As Integer) As WcfService.OrderDto Implements WcfService.IOrderManagementService.GetOrderDto
            Return MyBase.Channel.GetOrderDto(orderId)
        End Function
        
        Public Function GetOrderDtoAsync(ByVal orderId As Integer) As System.Threading.Tasks.Task(Of WcfService.OrderDto) Implements WcfService.IOrderManagementService.GetOrderDtoAsync
            Return MyBase.Channel.GetOrderDtoAsync(orderId)
        End Function
        
        Public Function GetOrderDtoes() As WcfService.OrderDto() Implements WcfService.IOrderManagementService.GetOrderDtoes
            Return MyBase.Channel.GetOrderDtoes
        End Function
        
        Public Function GetOrderDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.OrderDto()) Implements WcfService.IOrderManagementService.GetOrderDtoesAsync
            Return MyBase.Channel.GetOrderDtoesAsync
        End Function
        
        Public Function GetOrderDtoesByConditions(ByVal conditions As WcfService.OrderSearchConditionsDto) As WcfService.OrderDto() Implements WcfService.IOrderManagementService.GetOrderDtoesByConditions
            Return MyBase.Channel.GetOrderDtoesByConditions(conditions)
        End Function
        
        Public Function GetOrderDtoesByConditionsAsync(ByVal conditions As WcfService.OrderSearchConditionsDto) As System.Threading.Tasks.Task(Of WcfService.OrderDto()) Implements WcfService.IOrderManagementService.GetOrderDtoesByConditionsAsync
            Return MyBase.Channel.GetOrderDtoesByConditionsAsync(conditions)
        End Function
        
        Public Function AddOrderDto(ByVal orderDto As WcfService.OrderDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.AddOrderDto
            Return MyBase.Channel.AddOrderDto(orderDto)
        End Function
        
        Public Function AddOrderDtoAsync(ByVal orderDto As WcfService.OrderDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.AddOrderDtoAsync
            Return MyBase.Channel.AddOrderDtoAsync(orderDto)
        End Function
        
        Public Function UpdateOrderDto(ByVal orderDto As WcfService.OrderDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.UpdateOrderDto
            Return MyBase.Channel.UpdateOrderDto(orderDto)
        End Function
        
        Public Function UpdateOrderDtoAsync(ByVal orderDto As WcfService.OrderDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.UpdateOrderDtoAsync
            Return MyBase.Channel.UpdateOrderDtoAsync(orderDto)
        End Function
        
        Public Function AddOrUpdateOrderDto(ByVal orderDto As WcfService.OrderDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.AddOrUpdateOrderDto
            Return MyBase.Channel.AddOrUpdateOrderDto(orderDto)
        End Function
        
        Public Function AddOrUpdateOrderDtoAsync(ByVal orderDto As WcfService.OrderDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.AddOrUpdateOrderDtoAsync
            Return MyBase.Channel.AddOrUpdateOrderDtoAsync(orderDto)
        End Function
        
        Public Function DeleteOrderDto(ByVal orderId As Integer) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.DeleteOrderDto
            Return MyBase.Channel.DeleteOrderDto(orderId)
        End Function
        
        Public Function DeleteOrderDtoAsync(ByVal orderId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.DeleteOrderDtoAsync
            Return MyBase.Channel.DeleteOrderDtoAsync(orderId)
        End Function
        
        Public Function OrderDtoExists(ByVal orderId As Integer) As Boolean Implements WcfService.IOrderManagementService.OrderDtoExists
            Return MyBase.Channel.OrderDtoExists(orderId)
        End Function
        
        Public Function OrderDtoExistsAsync(ByVal orderId As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements WcfService.IOrderManagementService.OrderDtoExistsAsync
            Return MyBase.Channel.OrderDtoExistsAsync(orderId)
        End Function
        
        Public Function GetCustomerDtoes() As WcfService.CustomerDto() Implements WcfService.IOrderManagementService.GetCustomerDtoes
            Return MyBase.Channel.GetCustomerDtoes
        End Function
        
        Public Function GetCustomerDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.CustomerDto()) Implements WcfService.IOrderManagementService.GetCustomerDtoesAsync
            Return MyBase.Channel.GetCustomerDtoesAsync
        End Function
        
        Public Function GetCustomerDto(ByVal customerId As Integer) As WcfService.CustomerDto Implements WcfService.IOrderManagementService.GetCustomerDto
            Return MyBase.Channel.GetCustomerDto(customerId)
        End Function
        
        Public Function GetCustomerDtoAsync(ByVal customerId As Integer) As System.Threading.Tasks.Task(Of WcfService.CustomerDto) Implements WcfService.IOrderManagementService.GetCustomerDtoAsync
            Return MyBase.Channel.GetCustomerDtoAsync(customerId)
        End Function
        
        Public Function GetCustomerDtoByCondition(ByVal condition As WcfService.CustomerDto) As WcfService.CustomerDto() Implements WcfService.IOrderManagementService.GetCustomerDtoByCondition
            Return MyBase.Channel.GetCustomerDtoByCondition(condition)
        End Function
        
        Public Function GetCustomerDtoByConditionAsync(ByVal condition As WcfService.CustomerDto) As System.Threading.Tasks.Task(Of WcfService.CustomerDto()) Implements WcfService.IOrderManagementService.GetCustomerDtoByConditionAsync
            Return MyBase.Channel.GetCustomerDtoByConditionAsync(condition)
        End Function
        
        Public Function AddCustomerDto(ByVal customerDto As WcfService.CustomerDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.AddCustomerDto
            Return MyBase.Channel.AddCustomerDto(customerDto)
        End Function
        
        Public Function AddCustomerDtoAsync(ByVal customerDto As WcfService.CustomerDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.AddCustomerDtoAsync
            Return MyBase.Channel.AddCustomerDtoAsync(customerDto)
        End Function
        
        Public Function UpdateCustomerDto(ByVal customerDto As WcfService.CustomerDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.UpdateCustomerDto
            Return MyBase.Channel.UpdateCustomerDto(customerDto)
        End Function
        
        Public Function UpdateCustomerDtoAsync(ByVal customerDto As WcfService.CustomerDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.UpdateCustomerDtoAsync
            Return MyBase.Channel.UpdateCustomerDtoAsync(customerDto)
        End Function
        
        Public Function DeleteCustomerDto(ByVal customerId As Integer) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.DeleteCustomerDto
            Return MyBase.Channel.DeleteCustomerDto(customerId)
        End Function
        
        Public Function DeleteCustomerDtoAsync(ByVal customerId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.DeleteCustomerDtoAsync
            Return MyBase.Channel.DeleteCustomerDtoAsync(customerId)
        End Function
        
        Public Function CustomerDtoExists(ByVal customerId As Integer) As Boolean Implements WcfService.IOrderManagementService.CustomerDtoExists
            Return MyBase.Channel.CustomerDtoExists(customerId)
        End Function
        
        Public Function CustomerDtoExistsAsync(ByVal customerId As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements WcfService.IOrderManagementService.CustomerDtoExistsAsync
            Return MyBase.Channel.CustomerDtoExistsAsync(customerId)
        End Function
        
        Public Function GetProductDtoes() As WcfService.ProductDto() Implements WcfService.IOrderManagementService.GetProductDtoes
            Return MyBase.Channel.GetProductDtoes
        End Function
        
        Public Function GetProductDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.ProductDto()) Implements WcfService.IOrderManagementService.GetProductDtoesAsync
            Return MyBase.Channel.GetProductDtoesAsync
        End Function
        
        Public Function GetProductDto(ByVal productId As Integer) As WcfService.ProductDto Implements WcfService.IOrderManagementService.GetProductDto
            Return MyBase.Channel.GetProductDto(productId)
        End Function
        
        Public Function GetProductDtoAsync(ByVal productId As Integer) As System.Threading.Tasks.Task(Of WcfService.ProductDto) Implements WcfService.IOrderManagementService.GetProductDtoAsync
            Return MyBase.Channel.GetProductDtoAsync(productId)
        End Function
        
        Public Function GetProductDtoByCondition(ByVal condition As WcfService.ProductDto) As WcfService.ProductDto() Implements WcfService.IOrderManagementService.GetProductDtoByCondition
            Return MyBase.Channel.GetProductDtoByCondition(condition)
        End Function
        
        Public Function GetProductDtoByConditionAsync(ByVal condition As WcfService.ProductDto) As System.Threading.Tasks.Task(Of WcfService.ProductDto()) Implements WcfService.IOrderManagementService.GetProductDtoByConditionAsync
            Return MyBase.Channel.GetProductDtoByConditionAsync(condition)
        End Function
        
        Public Function AddProductDto(ByVal productDto As WcfService.ProductDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.AddProductDto
            Return MyBase.Channel.AddProductDto(productDto)
        End Function
        
        Public Function AddProductDtoAsync(ByVal productDto As WcfService.ProductDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.AddProductDtoAsync
            Return MyBase.Channel.AddProductDtoAsync(productDto)
        End Function
        
        Public Function UpdateProductDto(ByVal productDto As WcfService.ProductDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.UpdateProductDto
            Return MyBase.Channel.UpdateProductDto(productDto)
        End Function
        
        Public Function UpdateProductDtoAsync(ByVal productDto As WcfService.ProductDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.UpdateProductDtoAsync
            Return MyBase.Channel.UpdateProductDtoAsync(productDto)
        End Function
        
        Public Function DeleteProductDto(ByVal productId As Integer) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.DeleteProductDto
            Return MyBase.Channel.DeleteProductDto(productId)
        End Function
        
        Public Function DeleteProductDtoAsync(ByVal productId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.DeleteProductDtoAsync
            Return MyBase.Channel.DeleteProductDtoAsync(productId)
        End Function
        
        Public Function ProductDtoExists(ByVal productId As Integer) As Boolean Implements WcfService.IOrderManagementService.ProductDtoExists
            Return MyBase.Channel.ProductDtoExists(productId)
        End Function
        
        Public Function ProductDtoExistsAsync(ByVal productId As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements WcfService.IOrderManagementService.ProductDtoExistsAsync
            Return MyBase.Channel.ProductDtoExistsAsync(productId)
        End Function
        
        Public Function GetSpeciesDtoes() As WcfService.SpeciesDto() Implements WcfService.IOrderManagementService.GetSpeciesDtoes
            Return MyBase.Channel.GetSpeciesDtoes
        End Function
        
        Public Function GetSpeciesDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.SpeciesDto()) Implements WcfService.IOrderManagementService.GetSpeciesDtoesAsync
            Return MyBase.Channel.GetSpeciesDtoesAsync
        End Function
        
        Public Function GetSpeciesDto(ByVal speciesId As Integer) As WcfService.SpeciesDto Implements WcfService.IOrderManagementService.GetSpeciesDto
            Return MyBase.Channel.GetSpeciesDto(speciesId)
        End Function
        
        Public Function GetSpeciesDtoAsync(ByVal speciesId As Integer) As System.Threading.Tasks.Task(Of WcfService.SpeciesDto) Implements WcfService.IOrderManagementService.GetSpeciesDtoAsync
            Return MyBase.Channel.GetSpeciesDtoAsync(speciesId)
        End Function
        
        Public Function GetSpeciesDtoByCondition(ByVal condition As WcfService.SpeciesDto) As WcfService.SpeciesDto() Implements WcfService.IOrderManagementService.GetSpeciesDtoByCondition
            Return MyBase.Channel.GetSpeciesDtoByCondition(condition)
        End Function
        
        Public Function GetSpeciesDtoByConditionAsync(ByVal condition As WcfService.SpeciesDto) As System.Threading.Tasks.Task(Of WcfService.SpeciesDto()) Implements WcfService.IOrderManagementService.GetSpeciesDtoByConditionAsync
            Return MyBase.Channel.GetSpeciesDtoByConditionAsync(condition)
        End Function
        
        Public Function AddSpeciesDto(ByVal speciesDto As WcfService.SpeciesDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.AddSpeciesDto
            Return MyBase.Channel.AddSpeciesDto(speciesDto)
        End Function
        
        Public Function AddSpeciesDtoAsync(ByVal speciesDto As WcfService.SpeciesDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.AddSpeciesDtoAsync
            Return MyBase.Channel.AddSpeciesDtoAsync(speciesDto)
        End Function
        
        Public Function UpdateSpeciesDto(ByVal speciesDto As WcfService.SpeciesDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.UpdateSpeciesDto
            Return MyBase.Channel.UpdateSpeciesDto(speciesDto)
        End Function
        
        Public Function UpdateSpeciesDtoAsync(ByVal speciesDto As WcfService.SpeciesDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.UpdateSpeciesDtoAsync
            Return MyBase.Channel.UpdateSpeciesDtoAsync(speciesDto)
        End Function
        
        Public Function DeleteSpeciesDto(ByVal speciesId As Integer) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.DeleteSpeciesDto
            Return MyBase.Channel.DeleteSpeciesDto(speciesId)
        End Function
        
        Public Function DeleteSpeciesDtoAsync(ByVal speciesId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.DeleteSpeciesDtoAsync
            Return MyBase.Channel.DeleteSpeciesDtoAsync(speciesId)
        End Function
        
        Public Function SpeciesDtoExists(ByVal speciesId As Integer) As Boolean Implements WcfService.IOrderManagementService.SpeciesDtoExists
            Return MyBase.Channel.SpeciesDtoExists(speciesId)
        End Function
        
        Public Function SpeciesDtoExistsAsync(ByVal speciesId As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements WcfService.IOrderManagementService.SpeciesDtoExistsAsync
            Return MyBase.Channel.SpeciesDtoExistsAsync(speciesId)
        End Function
        
        Public Function GetBrandDtoes() As WcfService.BrandDto() Implements WcfService.IOrderManagementService.GetBrandDtoes
            Return MyBase.Channel.GetBrandDtoes
        End Function
        
        Public Function GetBrandDtoesAsync() As System.Threading.Tasks.Task(Of WcfService.BrandDto()) Implements WcfService.IOrderManagementService.GetBrandDtoesAsync
            Return MyBase.Channel.GetBrandDtoesAsync
        End Function
        
        Public Function GetBrandDto(ByVal brandId As Integer) As WcfService.BrandDto Implements WcfService.IOrderManagementService.GetBrandDto
            Return MyBase.Channel.GetBrandDto(brandId)
        End Function
        
        Public Function GetBrandDtoAsync(ByVal brandId As Integer) As System.Threading.Tasks.Task(Of WcfService.BrandDto) Implements WcfService.IOrderManagementService.GetBrandDtoAsync
            Return MyBase.Channel.GetBrandDtoAsync(brandId)
        End Function
        
        Public Function GetBrandDtoByCondition(ByVal condition As WcfService.BrandDto) As WcfService.BrandDto() Implements WcfService.IOrderManagementService.GetBrandDtoByCondition
            Return MyBase.Channel.GetBrandDtoByCondition(condition)
        End Function
        
        Public Function GetBrandDtoByConditionAsync(ByVal condition As WcfService.BrandDto) As System.Threading.Tasks.Task(Of WcfService.BrandDto()) Implements WcfService.IOrderManagementService.GetBrandDtoByConditionAsync
            Return MyBase.Channel.GetBrandDtoByConditionAsync(condition)
        End Function
        
        Public Function AddBrandDto(ByVal brandDto As WcfService.BrandDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.AddBrandDto
            Return MyBase.Channel.AddBrandDto(brandDto)
        End Function
        
        Public Function AddBrandDtoAsync(ByVal brandDto As WcfService.BrandDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.AddBrandDtoAsync
            Return MyBase.Channel.AddBrandDtoAsync(brandDto)
        End Function
        
        Public Function UpdateBrandDto(ByVal brandDto As WcfService.BrandDto) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.UpdateBrandDto
            Return MyBase.Channel.UpdateBrandDto(brandDto)
        End Function
        
        Public Function UpdateBrandDtoAsync(ByVal brandDto As WcfService.BrandDto) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.UpdateBrandDtoAsync
            Return MyBase.Channel.UpdateBrandDtoAsync(brandDto)
        End Function
        
        Public Function DeleteBrandDto(ByVal brandId As Integer) As OrderManagement.Common.ProcessResult Implements WcfService.IOrderManagementService.DeleteBrandDto
            Return MyBase.Channel.DeleteBrandDto(brandId)
        End Function
        
        Public Function DeleteBrandDtoAsync(ByVal brandId As Integer) As System.Threading.Tasks.Task(Of OrderManagement.Common.ProcessResult) Implements WcfService.IOrderManagementService.DeleteBrandDtoAsync
            Return MyBase.Channel.DeleteBrandDtoAsync(brandId)
        End Function
        
        Public Function BrandDtoExists(ByVal brandId As Integer) As Boolean Implements WcfService.IOrderManagementService.BrandDtoExists
            Return MyBase.Channel.BrandDtoExists(brandId)
        End Function
        
        Public Function BrandDtoExistsAsync(ByVal brandId As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements WcfService.IOrderManagementService.BrandDtoExistsAsync
            Return MyBase.Channel.BrandDtoExistsAsync(brandId)
        End Function
    End Class
End Namespace
