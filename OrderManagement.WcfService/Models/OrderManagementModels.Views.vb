'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.CodeDom.Compiler
Imports System.Data.Entity.Core.Metadata.Edm
Imports System.Data.Entity.Infrastructure.MappingViews

<Assembly: DbMappingViewCacheTypeAttribute(
    GetType(OrderManagement.WcfService.OrderManagementDbEntities),
    GetType(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets471bb91aedcd6ba16732f8710cd4fdacda2e63951f58c2780137e0aafe8690d5))>

Namespace Edm_EntityMappingGeneratedViews

    ''' <summary>
    ''' Implements a mapping view cache.
    ''' </summary>
    <GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")>
    Friend NotInheritable Class ViewsForBaseEntitySets471bb91aedcd6ba16732f8710cd4fdacda2e63951f58c2780137e0aafe8690d5
        Inherits DbMappingViewCache

        ''' <summary>
        ''' Gets a hash value computed over the mapping closure.
        ''' </summary>
        Public Overrides ReadOnly Property MappingHashValue As String
            Get
                Return "471bb91aedcd6ba16732f8710cd4fdacda2e63951f58c2780137e0aafe8690d5"
            End Get
        End Property

        ''' <summary>
        ''' Gets a view corresponding to the specified extent.
        ''' </summary>
        ''' <param name="extent">The extent.</param>
        ''' <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        Public Overrides Function GetView(extent As EntitySetBase) As DbMappingView
            If extent Is Nothing Then
                Throw New ArgumentNullException("extent")
            End If

            Dim extentName = extent.EntityContainer.Name & "." & extent.Name

            If extentName = "OrderManagementDbModelsStoreContainer.Brands" Then
                Return GetView0()
            End If

            If extentName = "OrderManagementDbModelsStoreContainer.Customers" Then
                Return GetView1()
            End If

            If extentName = "OrderManagementDbModelsStoreContainer.OrderDetails" Then
                Return GetView2()
            End If

            If extentName = "OrderManagementDbModelsStoreContainer.Orders" Then
                Return GetView3()
            End If

            If extentName = "OrderManagementDbModelsStoreContainer.Products" Then
                Return GetView4()
            End If

            If extentName = "OrderManagementDbModelsStoreContainer.Species" Then
                Return GetView5()
            End If

            If extentName = "OrderManagementDbEntities.Brands" Then
                Return GetView6()
            End If

            If extentName = "OrderManagementDbEntities.Customers" Then
                Return GetView7()
            End If

            If extentName = "OrderManagementDbEntities.OrderDetails" Then
                Return GetView8()
            End If

            If extentName = "OrderManagementDbEntities.Orders" Then
                Return GetView9()
            End If

            If extentName = "OrderManagementDbEntities.Products" Then
                Return GetView10()
            End If

            If extentName = "OrderManagementDbEntities.Species" Then
                Return GetView11()
            End If

            If extentName = "OrderManagementDbModelsStoreContainer.Inventory" Then
                Return GetView12()
            End If

            If extentName = "OrderManagementDbEntities.Inventories" Then
                Return GetView13()
            End If

            Return Nothing
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbModelsStoreContainer.Brands.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView0() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Brands" & vbCrLf &
                "        [OrderManagementDbModels.Store.Brands](T1.Brands_BrandId, T1.Brands_BrandName, T1.Brands_BrandNameJp)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.BrandId AS Brands_BrandId, " & vbCrLf &
                "            T.BrandName AS Brands_BrandName, " & vbCrLf &
                "            T.BrandNameJp AS Brands_BrandNameJp, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbEntities.Brands AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbModelsStoreContainer.Customers.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView1() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Customers" & vbCrLf &
                "        [OrderManagementDbModels.Store.Customers](T1.Customers_CustomerId, T1.Customers_Name, T1.Customers_WechatName, T1.Customers_TaobaoName, T1.Customers_Address, T1.Customers_PostCode, T1.Customers_Phone)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CustomerId AS Customers_CustomerId, " & vbCrLf &
                "            T.Name AS Customers_Name, " & vbCrLf &
                "            T.WechatName AS Customers_WechatName, " & vbCrLf &
                "            T.TaobaoName AS Customers_TaobaoName, " & vbCrLf &
                "            T.Address AS Customers_Address, " & vbCrLf &
                "            T.PostCode AS Customers_PostCode, " & vbCrLf &
                "            T.Phone AS Customers_Phone, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbEntities.Customers AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbModelsStoreContainer.OrderDetails.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView2() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing OrderDetails" & vbCrLf &
                "        [OrderManagementDbModels.Store.OrderDetails](T1.OrderDetails_OrderDetailId, T1.OrderDetails_OrderId, T1.OrderDetails_ProductId, T1.OrderDetails_Quantity, T1.OrderDetails_PurchasePrice, T1.OrderDetails_SoldPrice, T1.OrderDetails_Status, T1.OrderDetails_Link)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.OrderDetailId AS OrderDetails_OrderDetailId, " & vbCrLf &
                "            T.OrderId AS OrderDetails_OrderId, " & vbCrLf &
                "            T.ProductId AS OrderDetails_ProductId, " & vbCrLf &
                "            T.Quantity AS OrderDetails_Quantity, " & vbCrLf &
                "            T.PurchasePrice AS OrderDetails_PurchasePrice, " & vbCrLf &
                "            T.SoldPrice AS OrderDetails_SoldPrice, " & vbCrLf &
                "            T.Status AS OrderDetails_Status, " & vbCrLf &
                "            T.Link AS OrderDetails_Link, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbEntities.OrderDetails AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbModelsStoreContainer.Orders.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView3() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Orders" & vbCrLf &
                "        [OrderManagementDbModels.Store.Orders](T1.Orders_OrderId, T1.Orders_CustomerId, T1.Orders_OrderType, T1.Orders_InvoiceNo, T1.Orders_OrderDate, T1.Orders_ShipDate, T1.Orders_Freight)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.OrderId AS Orders_OrderId, " & vbCrLf &
                "            T.CustomerId AS Orders_CustomerId, " & vbCrLf &
                "            T.OrderType AS Orders_OrderType, " & vbCrLf &
                "            T.InvoiceNo AS Orders_InvoiceNo, " & vbCrLf &
                "            T.OrderDate AS Orders_OrderDate, " & vbCrLf &
                "            T.ShipDate AS Orders_ShipDate, " & vbCrLf &
                "            T.Freight AS Orders_Freight, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbEntities.Orders AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbModelsStoreContainer.Products.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView4() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Products" & vbCrLf &
                "        [OrderManagementDbModels.Store.Products](T1.Products_ProductId, T1.Products_SpeciesId, T1.Products_BrandId, T1.Products_ProductName, T1.Products_ProductNameJp)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ProductId AS Products_ProductId, " & vbCrLf &
                "            T.SpeciesId AS Products_SpeciesId, " & vbCrLf &
                "            T.BrandId AS Products_BrandId, " & vbCrLf &
                "            T.ProductName AS Products_ProductName, " & vbCrLf &
                "            T.ProductNameJp AS Products_ProductNameJp, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbEntities.Products AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbModelsStoreContainer.Species.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView5() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Species" & vbCrLf &
                "        [OrderManagementDbModels.Store.Species](T1.Species_SpeciesId, T1.Species_SpeciesName)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SpeciesId AS Species_SpeciesId, " & vbCrLf &
                "            T.SpeciesName AS Species_SpeciesName, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbEntities.Species AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbEntities.Brands.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView6() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Brands" & vbCrLf &
                "        [OrderManagementDbModels.Brand](T1.Brand_BrandId, T1.Brand_BrandName, T1.Brand_BrandNameJp)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.BrandId AS Brand_BrandId, " & vbCrLf &
                "            T.BrandName AS Brand_BrandName, " & vbCrLf &
                "            T.BrandNameJp AS Brand_BrandNameJp, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbModelsStoreContainer.Brands AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbEntities.Customers.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView7() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Customers" & vbCrLf &
                "        [OrderManagementDbModels.Customer](T1.Customer_CustomerId, T1.Customer_Name, T1.Customer_WechatName, T1.Customer_TaobaoName, T1.Customer_Address, T1.Customer_PostCode, T1.Customer_Phone)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CustomerId AS Customer_CustomerId, " & vbCrLf &
                "            T.Name AS Customer_Name, " & vbCrLf &
                "            T.WechatName AS Customer_WechatName, " & vbCrLf &
                "            T.TaobaoName AS Customer_TaobaoName, " & vbCrLf &
                "            T.Address AS Customer_Address, " & vbCrLf &
                "            T.PostCode AS Customer_PostCode, " & vbCrLf &
                "            T.Phone AS Customer_Phone, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbModelsStoreContainer.Customers AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbEntities.OrderDetails.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView8() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing OrderDetails" & vbCrLf &
                "        [OrderManagementDbModels.OrderDetail](T1.OrderDetail_OrderDetailId, T1.OrderDetail_OrderId, T1.OrderDetail_ProductId, T1.OrderDetail_Quantity, T1.OrderDetail_PurchasePrice, T1.OrderDetail_SoldPrice, T1.OrderDetail_Status, T1.OrderDetail_Link)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.OrderDetailId AS OrderDetail_OrderDetailId, " & vbCrLf &
                "            T.OrderId AS OrderDetail_OrderId, " & vbCrLf &
                "            T.ProductId AS OrderDetail_ProductId, " & vbCrLf &
                "            T.Quantity AS OrderDetail_Quantity, " & vbCrLf &
                "            T.PurchasePrice AS OrderDetail_PurchasePrice, " & vbCrLf &
                "            T.SoldPrice AS OrderDetail_SoldPrice, " & vbCrLf &
                "            T.Status AS OrderDetail_Status, " & vbCrLf &
                "            T.Link AS OrderDetail_Link, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbModelsStoreContainer.OrderDetails AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbEntities.Orders.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView9() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Orders" & vbCrLf &
                "        [OrderManagementDbModels.Order](T1.Order_OrderId, T1.Order_CustomerId, T1.Order_OrderType, T1.Order_InvoiceNo, T1.Order_OrderDate, T1.Order_ShipDate, T1.Order_Freight)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.OrderId AS Order_OrderId, " & vbCrLf &
                "            T.CustomerId AS Order_CustomerId, " & vbCrLf &
                "            T.OrderType AS Order_OrderType, " & vbCrLf &
                "            T.InvoiceNo AS Order_InvoiceNo, " & vbCrLf &
                "            T.OrderDate AS Order_OrderDate, " & vbCrLf &
                "            T.ShipDate AS Order_ShipDate, " & vbCrLf &
                "            T.Freight AS Order_Freight, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbModelsStoreContainer.Orders AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbEntities.Products.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView10() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Products" & vbCrLf &
                "        [OrderManagementDbModels.Product](T1.Product_ProductId, T1.Product_SpeciesId, T1.Product_BrandId, T1.Product_ProductName, T1.Product_ProductNameJp)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ProductId AS Product_ProductId, " & vbCrLf &
                "            T.SpeciesId AS Product_SpeciesId, " & vbCrLf &
                "            T.BrandId AS Product_BrandId, " & vbCrLf &
                "            T.ProductName AS Product_ProductName, " & vbCrLf &
                "            T.ProductNameJp AS Product_ProductNameJp, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbModelsStoreContainer.Products AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbEntities.Species.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView11() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Species" & vbCrLf &
                "        [OrderManagementDbModels.Species](T1.Species_SpeciesId, T1.Species_SpeciesName)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SpeciesId AS Species_SpeciesId, " & vbCrLf &
                "            T.SpeciesName AS Species_SpeciesName, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbModelsStoreContainer.Species AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbModelsStoreContainer.Inventory.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView12() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Inventory" & vbCrLf &
                "        [OrderManagementDbModels.Store.Inventory](T1.Inventory_ProductId, T1.Inventory_Quantity)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ProductId AS Inventory_ProductId, " & vbCrLf &
                "            T.Quantity AS Inventory_Quantity, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbEntities.Inventories AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for OrderManagementDbEntities.Inventories.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView13() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Inventories" & vbCrLf &
                "        [OrderManagementDbModels.Inventory](T1.Inventory_ProductId, T1.Inventory_Quantity)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ProductId AS Inventory_ProductId, " & vbCrLf &
                "            T.Quantity AS Inventory_Quantity, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM OrderManagementDbModelsStoreContainer.Inventory AS T" & vbCrLf &
                "    ) AS T1")
        End Function
    End Class
End Namespace
